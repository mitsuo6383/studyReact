{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport todoService from '../services/todos';\nimport { uuid } from \"uuidv4\";\nexport default function useTodo() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    todoService.getAll().then(todos => {\n      setTodos(todos.reverse());\n    });\n  }, []);\n\n  const toggleTodo = (id, completed) => {\n    const todo = todos.find(todo => todo.id === id);\n    const newTodo = { ...todo,\n      completed: !completed\n    };\n    todoService.update(id, newTodo).then(updateTodo => {\n      const newTodos = todos.map(todo => todo.id !== updateTodo.id ? todo : updateTodo);\n      setTodos(newTodos);\n    });\n  };\n\n  const deleteTodo = id => {\n    todoService.delete(id).then(deletedTodoId => {\n      const newTodos = todos.filter(todo => todo.id !== deletedTodoId);\n      setTodos(newTodos);\n    });\n  };\n\n  const addTodo = todo => {\n    const newTodo = {\n      title: todo,\n      completed: false,\n      id: uuid()\n    };\n    return todoService.add(newTodo).then(addedTodo => {\n      setTodos([addedTodo].concat(todos));\n    });\n  };\n\n  return {\n    todos,\n    toggleTodo,\n    deleteTodo,\n    addTodo\n  };\n}","map":{"version":3,"sources":["/Users/mitsuo.moto/work/ENG_MTG/react/src/hooks/useTodo.js"],"names":["useState","useEffect","todoService","uuid","useTodo","todos","setTodos","getAll","then","reverse","toggleTodo","id","completed","todo","find","newTodo","update","updateTodo","newTodos","map","deleteTodo","delete","deletedTodoId","filter","addTodo","title","add","addedTodo","concat"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAGA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAGA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACK,MAAZ,GAAqBC,IAArB,CAA0BH,KAAK,IAAI;AAC/BC,MAAAA,QAAQ,CAACD,KAAK,CAACI,OAAN,EAAD,CAAR;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,UAAU,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AAClC,UAAMC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA/B,CAAb;AACA,UAAMI,OAAO,GAAG,EAAC,GAAGF,IAAJ;AAAUD,MAAAA,SAAS,EAAE,CAACA;AAAtB,KAAhB;AAGAV,IAAAA,WAAW,CAACc,MAAZ,CAAmBL,EAAnB,EAAuBI,OAAvB,EAAgCP,IAAhC,CAAqCS,UAAU,IAAI;AAC/C,YAAMC,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAUN,IAAI,IAC3BA,IAAI,CAACF,EAAL,KAAYM,UAAU,CAACN,EAAvB,GAA4BE,IAA5B,GAAmCI,UADtB,CAAjB;AAGAX,MAAAA,QAAQ,CAACY,QAAD,CAAR;AACH,KALD;AAMH,GAXD;;AAcA,QAAME,UAAU,GAAGT,EAAE,IAAI;AACrBT,IAAAA,WAAW,CAACmB,MAAZ,CAAmBV,EAAnB,EAAuBH,IAAvB,CAA4Bc,aAAa,IAAI;AACzC,YAAMJ,QAAQ,GAAGb,KAAK,CAACkB,MAAN,CAAaV,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYW,aAAjC,CAAjB;AACAhB,MAAAA,QAAQ,CAACY,QAAD,CAAR;AACH,KAHD;AAIH,GALD;;AAOA,QAAMM,OAAO,GAAGX,IAAI,IAAI;AACpB,UAAME,OAAO,GAAG;AACZU,MAAAA,KAAK,EAAEZ,IADK;AAEZD,MAAAA,SAAS,EAAE,KAFC;AAGZD,MAAAA,EAAE,EAAER,IAAI;AAHI,KAAhB;AAMA,WAAOD,WAAW,CAACwB,GAAZ,CAAgBX,OAAhB,EAAyBP,IAAzB,CAA8BmB,SAAS,IAAI;AAC9CrB,MAAAA,QAAQ,CAAC,CAACqB,SAAD,EAAYC,MAAZ,CAAmBvB,KAAnB,CAAD,CAAR;AACH,KAFM,CAAP;AAGH,GAVD;;AAYA,SAAO;AAAEA,IAAAA,KAAF;AAASK,IAAAA,UAAT;AAAqBU,IAAAA,UAArB;AAAiCI,IAAAA;AAAjC,GAAP;AACH","sourcesContent":["import {useState, useEffect} from 'react';\n\n\nimport todoService from '../services/todos';\nimport {uuid} from \"uuidv4\";\n\n\nexport default function useTodo() {\n\n    const [todos, setTodos] = useState([]);\n\n    useEffect(() => {\n        todoService.getAll().then(todos => {\n            setTodos(todos.reverse());\n        });\n    }, []);\n\n    const toggleTodo = (id, completed) => {\n        const todo = todos.find(todo => todo.id === id);\n        const newTodo = {...todo, completed: !completed};\n\n\n        todoService.update(id, newTodo).then(updateTodo => {\n            const newTodos = todos.map(todo =>\n                todo.id !== updateTodo.id ? todo : updateTodo\n            );\n            setTodos(newTodos);\n        });\n    };\n\n\n    const deleteTodo = id => {\n        todoService.delete(id).then(deletedTodoId => {\n            const newTodos = todos.filter(todo => todo.id !== deletedTodoId);\n            setTodos(newTodos);\n        });\n    };\n\n    const addTodo = todo => {\n        const newTodo = {\n            title: todo,\n            completed: false,\n            id: uuid()\n        };\n\n        return todoService.add(newTodo).then(addedTodo => {\n            setTodos([addedTodo].concat(todos));\n        });\n    }\n\n    return { todos, toggleTodo, deleteTodo, addTodo};\n}"]},"metadata":{},"sourceType":"module"}