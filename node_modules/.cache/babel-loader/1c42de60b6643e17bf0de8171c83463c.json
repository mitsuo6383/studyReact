{"ast":null,"code":"import _objectSpread from\"/Users/mitsuo.moto/work/ENG_MTG/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mitsuo.moto/work/ENG_MTG/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import todoService from'../services/todos';import{uuid}from\"uuidv4\";export default function useTodo(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];useEffect(function(){todoService.getAll().then(function(todos){setTodos(todos.reverse());});},[]);var toggletodo=function toggletodo(id,completed){var todo=todos.find(function(todo){return todo.id===id;});var newTodo=_objectSpread(_objectSpread({},todo),{},{completed:!completed});};todoService.update(id,newTodo).then(function(updateTodo){var newTodos=todos.map(function(todo){return todo.id!==updateTodo.id?todo:updateTodo;});setTodos(newTodos);});var deleteTodo=function deleteTodo(id){todoService.delete(id).then(function(deletedTodoId){var newTodos=todos.filter(function(todo){return todo.id!==deletedTodoId;});setTodos(newTodos);});};var addTodo=function addTodo(todo){var newTodo={title:todo,completed:false,id:uuid()};return todoService.add(newTodo).then(function(addedTodo){setTodos([addedTodo].concat(todos));});};return{todos:todos,toggletodo:toggletodo,deleteTodo:deleteTodo,addTodo:addTodo};}","map":{"version":3,"sources":["/Users/mitsuo.moto/work/ENG_MTG/react/src/hooks/useTodo.js"],"names":["useState","useEffect","todoService","uuid","useTodo","todos","setTodos","getAll","then","reverse","toggletodo","id","completed","todo","find","newTodo","update","updateTodo","newTodos","map","deleteTodo","delete","deletedTodoId","filter","addTodo","title","add","addedTodo","concat"],"mappings":"uTAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CAGA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,OAAQC,IAAR,KAAmB,QAAnB,CAGA,cAAe,SAASC,CAAAA,OAAT,EAAmB,CAE9B,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEAL,SAAS,CAAC,UAAM,CACZC,WAAW,CAACK,MAAZ,GAAqBC,IAArB,CAA0B,SAAAH,KAAK,CAAI,CAC/BC,QAAQ,CAACD,KAAK,CAACI,OAAN,EAAD,CAAR,CACH,CAFD,EAGH,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAKC,SAAL,CAAmB,CAClC,GAAMC,CAAAA,IAAI,CAAGR,KAAK,CAACS,IAAN,CAAW,SAAAD,IAAI,QAAIA,CAAAA,IAAI,CAACF,EAAL,GAAYA,EAAhB,EAAf,CAAb,CACA,GAAMI,CAAAA,OAAO,gCAAOF,IAAP,MAAaD,SAAS,CAAE,CAACA,SAAzB,EAAb,CACH,CAHD,CAKAV,WAAW,CAACc,MAAZ,CAAmBL,EAAnB,CAAuBI,OAAvB,EAAgCP,IAAhC,CAAqC,SAAAS,UAAU,CAAI,CAC/C,GAAMC,CAAAA,QAAQ,CAAGb,KAAK,CAACc,GAAN,CAAU,SAAAN,IAAI,QAC3BA,CAAAA,IAAI,CAACF,EAAL,GAAYM,UAAU,CAACN,EAAvB,CAA4BE,IAA5B,CAAmCI,UADR,EAAd,CAAjB,CAGAX,QAAQ,CAACY,QAAD,CAAR,CACH,CALD,EAQA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAT,EAAE,CAAI,CACrBT,WAAW,CAACmB,MAAZ,CAAmBV,EAAnB,EAAuBH,IAAvB,CAA4B,SAAAc,aAAa,CAAI,CACzC,GAAMJ,CAAAA,QAAQ,CAAGb,KAAK,CAACkB,MAAN,CAAa,SAAAV,IAAI,QAAIA,CAAAA,IAAI,CAACF,EAAL,GAAYW,aAAhB,EAAjB,CAAjB,CACAhB,QAAQ,CAACY,QAAD,CAAR,CACH,CAHD,EAIH,CALD,CAOA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAX,IAAI,CAAI,CACpB,GAAME,CAAAA,OAAO,CAAG,CACZU,KAAK,CAAEZ,IADK,CAEZD,SAAS,CAAE,KAFC,CAGZD,EAAE,CAAER,IAAI,EAHI,CAAhB,CAMA,MAAOD,CAAAA,WAAW,CAACwB,GAAZ,CAAgBX,OAAhB,EAAyBP,IAAzB,CAA8B,SAAAmB,SAAS,CAAI,CAC9CrB,QAAQ,CAAC,CAACqB,SAAD,EAAYC,MAAZ,CAAmBvB,KAAnB,CAAD,CAAR,CACH,CAFM,CAAP,CAGH,CAVD,CAYA,MAAO,CAAEA,KAAK,CAALA,KAAF,CAASK,UAAU,CAAVA,UAAT,CAAqBU,UAAU,CAAVA,UAArB,CAAiCI,OAAO,CAAPA,OAAjC,CAAP,CACH","sourcesContent":["import {useState, useEffect} from 'react';\n\n\nimport todoService from '../services/todos';\nimport {uuid} from \"uuidv4\";\n\n\nexport default function useTodo() {\n\n    const [todos, setTodos] = useState([]);\n\n    useEffect(() => {\n        todoService.getAll().then(todos => {\n            setTodos(todos.reverse());\n        });\n    }, []);\n\n    const toggletodo = (id, completed) => {\n        const todo = todos.find(todo => todo.id === id);\n        const newTodo = {...todo, completed: !completed };\n    }\n\n    todoService.update(id, newTodo).then(updateTodo => {\n        const newTodos = todos.map(todo =>\n            todo.id !== updateTodo.id ? todo : updateTodo\n        );\n        setTodos(newTodos);\n    });\n\n\n    const deleteTodo = id => {\n        todoService.delete(id).then(deletedTodoId => {\n            const newTodos = todos.filter(todo => todo.id !== deletedTodoId);\n            setTodos(newTodos);\n        });\n    };\n\n    const addTodo = todo => {\n        const newTodo = {\n            title: todo,\n            completed: false,\n            id: uuid()\n        };\n\n        return todoService.add(newTodo).then(addedTodo => {\n            setTodos([addedTodo].concat(todos));\n        });\n    }\n\n    return { todos, toggletodo, deleteTodo, addTodo};\n}"]},"metadata":{},"sourceType":"module"}