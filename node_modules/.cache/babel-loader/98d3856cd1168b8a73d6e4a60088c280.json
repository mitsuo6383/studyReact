{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mitsuo.moto/work/ENG_MTG/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mitsuo.moto/work/ENG_MTG/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var baseUrl='http://localhost:3001/todos';var getAll=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(baseUrl);case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAll(){return _ref.apply(this,arguments);};}();//ToDOを更新する\nvar update=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,newTodo){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.put(\"\".concat(baseUrl,\"/\").concat(id),newTodo);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function update(_x,_x2){return _ref2.apply(this,arguments);};}();//ToDoを削除する\nvar _delete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.delete(\"\".concat(baseUrl,\"/\").concat(id));case 2:return _context3.abrupt(\"return\",id);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function _delete(_x3){return _ref3.apply(this,arguments);};}();//Todoを追加する\nvar add=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(newTodo){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.post(baseUrl,newTodo);case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function add(_x4){return _ref4.apply(this,arguments);};}();export default{getAll:getAll,update:update,delete:_delete,add:add};","map":{"version":3,"sources":["/Users/mitsuo.moto/work/ENG_MTG/react/src/services/todos.js"],"names":["axios","baseUrl","getAll","get","response","data","update","id","newTodo","put","_delete","delete","add","post"],"mappings":"qTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAG,6BAAhB,CAEA,GAAMC,CAAAA,MAAM,0FAAG,sKACYF,CAAAA,KAAK,CAACG,GAAN,CAAUF,OAAV,CADZ,QACLG,QADK,+CAEJA,QAAQ,CAACC,IAFL,wDAAH,kBAANH,CAAAA,MAAM,0CAAZ,CAKA;AACA,GAAMI,CAAAA,MAAM,2FAAG,kBAAOC,EAAP,CAAWC,OAAX,0JACYR,CAAAA,KAAK,CAACS,GAAN,WAAaR,OAAb,aAAwBM,EAAxB,EAA8BC,OAA9B,CADZ,QACLJ,QADK,iDAEJA,QAAQ,CAACC,IAFL,0DAAH,kBAANC,CAAAA,MAAM,iDAAZ,CAKA;AACA,GAAMI,CAAAA,OAAO,2FAAG,kBAAMH,EAAN,6IACNP,CAAAA,KAAK,CAACW,MAAN,WAAgBV,OAAhB,aAA2BM,EAA3B,EADM,yCAELA,EAFK,0DAAH,kBAAPG,CAAAA,OAAO,8CAAb,CAKA;AACA,GAAME,CAAAA,GAAG,2FAAG,kBAAMJ,OAAN,0JACeR,CAAAA,KAAK,CAACa,IAAN,CAAWZ,OAAX,CAAoBO,OAApB,CADf,QACFJ,QADE,iDAEDA,QAAQ,CAACC,IAFR,0DAAH,kBAAHO,CAAAA,GAAG,8CAAT,CAKA,cAAe,CAACV,MAAM,CAANA,MAAD,CAASI,MAAM,CAANA,MAAT,CAAiBK,MAAM,CAAED,OAAzB,CAAkCE,GAAG,CAAHA,GAAlC,CAAf","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://localhost:3001/todos';\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl);\n    return response.data;\n};\n\n//ToDOを更新する\nconst update = async (id, newTodo) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newTodo);\n    return response.data;\n};\n\n//ToDoを削除する\nconst _delete = async id => {\n    await axios.delete(`${baseUrl}/${id}`);\n    return id;\n}\n\n//Todoを追加する\nconst add = async newTodo => {\n    const response = await axios.post(baseUrl, newTodo);\n    return response.data;\n};\n\nexport default {getAll, update, delete: _delete, add };"]},"metadata":{},"sourceType":"module"}