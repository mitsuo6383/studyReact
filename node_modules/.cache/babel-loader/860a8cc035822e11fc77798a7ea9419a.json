{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport todoService from '../services/todos';\nimport { uuid } from \"uuidv4\";\nexport default function useTodo() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    todoService.getAll().then(todos => {\n      setTodos(todos.reverse());\n    });\n  }, []);\n\n  const toggleTodo = (id, completed) => {\n    console.log(id);\n    console.log(completed);\n    const todo = todos.find(todo => todo.id === id);\n    const newTodo = { ...todo,\n      completed: !completed\n    };\n    todoService.update(id, newTodo).then(updateTodo => {\n      const newTodos = todos.map(todo => todo.id !== updateTodo.id ? todo : updateTodo);\n      setTodos(newTodos);\n    });\n  };\n\n  const deleteTodo = id => {\n    console.log('delete: ' + id);\n    todoService.delete(id).then(deletedTodoId => {\n      const newTodos = todos.filter(todo => todo.id !== deletedTodoId);\n      setTodos(newTodos);\n    });\n  };\n\n  const addTodo = todo => {\n    console.log('add: ' + todo);\n    const newTodo = {\n      title: todo,\n      completed: false,\n      id: uuid()\n    };\n    return todoService.add(newTodo).then(addedTodo => {\n      setTodos([addedTodo].concat(todos));\n    });\n  };\n\n  return {\n    todos,\n    toggleTodo,\n    deleteTodo,\n    addTodo\n  };\n}","map":{"version":3,"sources":["/Users/mitsuo.moto/work/ENG_MTG/react/src/hooks/useTodo.js"],"names":["useState","useEffect","todoService","uuid","useTodo","todos","setTodos","getAll","then","reverse","toggleTodo","id","completed","console","log","todo","find","newTodo","update","updateTodo","newTodos","map","deleteTodo","delete","deletedTodoId","filter","addTodo","title","add","addedTodo","concat"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAGA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAGA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACK,MAAZ,GAAqBC,IAArB,CAA0BH,KAAK,IAAI;AAC/BC,MAAAA,QAAQ,CAACD,KAAK,CAACI,OAAN,EAAD,CAAR;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,UAAU,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,UAAMG,IAAI,GAAGV,KAAK,CAACW,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA/B,CAAb;AACA,UAAMM,OAAO,GAAG,EAAC,GAAGF,IAAJ;AAAUH,MAAAA,SAAS,EAAE,CAACA;AAAtB,KAAhB;AAGAV,IAAAA,WAAW,CAACgB,MAAZ,CAAmBP,EAAnB,EAAuBM,OAAvB,EAAgCT,IAAhC,CAAqCW,UAAU,IAAI;AAC/C,YAAMC,QAAQ,GAAGf,KAAK,CAACgB,GAAN,CAAUN,IAAI,IAC3BA,IAAI,CAACJ,EAAL,KAAYQ,UAAU,CAACR,EAAvB,GAA4BI,IAA5B,GAAmCI,UADtB,CAAjB;AAGAb,MAAAA,QAAQ,CAACc,QAAD,CAAR;AACH,KALD;AAMH,GAbD;;AAgBA,QAAME,UAAU,GAAGX,EAAE,IAAI;AACrBE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,EAAzB;AAEAT,IAAAA,WAAW,CAACqB,MAAZ,CAAmBZ,EAAnB,EAAuBH,IAAvB,CAA4BgB,aAAa,IAAI;AACzC,YAAMJ,QAAQ,GAAGf,KAAK,CAACoB,MAAN,CAAaV,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYa,aAAjC,CAAjB;AACAlB,MAAAA,QAAQ,CAACc,QAAD,CAAR;AACH,KAHD;AAIH,GAPD;;AASA,QAAMM,OAAO,GAAGX,IAAI,IAAI;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUC,IAAtB;AACA,UAAME,OAAO,GAAG;AACZU,MAAAA,KAAK,EAAEZ,IADK;AAEZH,MAAAA,SAAS,EAAE,KAFC;AAGZD,MAAAA,EAAE,EAAER,IAAI;AAHI,KAAhB;AAMA,WAAOD,WAAW,CAAC0B,GAAZ,CAAgBX,OAAhB,EAAyBT,IAAzB,CAA8BqB,SAAS,IAAI;AAC9CvB,MAAAA,QAAQ,CAAC,CAACuB,SAAD,EAAYC,MAAZ,CAAmBzB,KAAnB,CAAD,CAAR;AACH,KAFM,CAAP;AAGH,GAXD;;AAaA,SAAO;AAAEA,IAAAA,KAAF;AAASK,IAAAA,UAAT;AAAqBY,IAAAA,UAArB;AAAiCI,IAAAA;AAAjC,GAAP;AACH","sourcesContent":["import {useState, useEffect} from 'react';\n\n\nimport todoService from '../services/todos';\nimport {uuid} from \"uuidv4\";\n\n\nexport default function useTodo() {\n\n    const [todos, setTodos] = useState([]);\n\n    useEffect(() => {\n        todoService.getAll().then(todos => {\n            setTodos(todos.reverse());\n        });\n    }, []);\n\n    const toggleTodo = (id, completed) => {\n        console.log(id);\n        console.log(completed);\n        const todo = todos.find(todo => todo.id === id);\n        const newTodo = {...todo, completed: !completed};\n\n\n        todoService.update(id, newTodo).then(updateTodo => {\n            const newTodos = todos.map(todo =>\n                todo.id !== updateTodo.id ? todo : updateTodo\n            );\n            setTodos(newTodos);\n        });\n    };\n\n\n    const deleteTodo = id => {\n        console.log('delete: ' + id);\n\n        todoService.delete(id).then(deletedTodoId => {\n            const newTodos = todos.filter(todo => todo.id !== deletedTodoId);\n            setTodos(newTodos);\n        });\n    };\n\n    const addTodo = todo => {\n        console.log('add: ' + todo);\n        const newTodo = {\n            title: todo,\n            completed: false,\n            id: uuid()\n        };\n\n        return todoService.add(newTodo).then(addedTodo => {\n            setTodos([addedTodo].concat(todos));\n        });\n    }\n\n    return { todos, toggleTodo, deleteTodo, addTodo};\n}"]},"metadata":{},"sourceType":"module"}